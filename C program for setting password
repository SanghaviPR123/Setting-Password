/*
 * File:   newmain.c
 * Author: sangh
 *
 * Created on 17 October, 2024, 2:10 PM
 */
// CONFIG
// CONFIG
#pragma config FOSC = EXTRC     // Oscillator Selection bits (RC oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)
#define _XTAL_FREQ 4000000
// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

void send_uart(char a[])
{
    int i;
    for(i=0;a[i]!='\0';i++)
    {
        while(TRMT==0);
        TXREG=a[i];
    }
}

char rxv_uart()
{
    while(RCIF==0);
    return RCREG;
}

void main(void) 
{
    TRISC=0x80;
    TXSTA=0x24;
    RCSTA=0x90;
    SPBRG=25;
    int flag=0;
    char next[]="\n\r";
    char n[10];
    char new2[10];
    char pass[]="1234";
    
    while(1)
    {
        char m[]="Enter the password\r\n";
        __delay_ms(500);
        send_uart(m);
        int i=0;
        char a[10];
        for(i=0;;i++)
        {
            a[i]=rxv_uart();
            if(a[i]=='\r')
            {
                a[i]='\0';
                break;
            }
        }
        char correct[]="CORRECT\n\r";
        char incorrect[]="INCORRECT\r\n";
        
        char wait[]="wait for a sec....";
       
        char num[]={'3','2','1'};
        char change[]="change password?\n\r";
        char new[]=" new Password: ";
        char confirm[]="Cnfrm : ";
        //char yes[]="y";
        //char no[]="n";
        char wrong[]="Password wrong: ";
        if(strcmp(a,pass)==0)
        {
            send_uart(correct);
            flag=0;
            send_uart(change);
            char b;
            b=rxv_uart();
            if(b!='y')
            {
                send_uart("hello");
                continue;
            }
            else if(b=='y')
            {
                send_uart(new);
                
                for(i=0;;i++)
                {
                    n[i]=rxv_uart();
                    if(n[i]=='\r')
                    {
                        n[i]='\0';
                        break;
                    }
                }
                
                send_uart(n);
                send_uart(next);
                send_uart(confirm);
                for(i=0;;i++)
                {
                    new2[i]=rxv_uart();
                    if(new2[i]=='\r')
                    {
                        new2[i]='\0';
                        break;
                    }
                }
                send_uart(new2);
                send_uart(next);
                char arr[5];
                int k=strcmp(n,new2);
                //sprintf(arr,"%d",k);
                //send_uart(arr);
                
                if(k==0)
                {
                    strcpy(pass,n);
                    //send_uart("success");
                }
                else
                {
                    send_uart(wrong);
                }
               
            }
            
        }
        
        else
        {
            send_uart(incorrect);
            flag++;
            if(flag==3)
            {
                send_uart(wait);
                for(i=0;i<3;i++)
                {
                    TXREG=num[i];
                    while(TRMT==0);
                    __delay_ms(1000);
                    TXREG='\b';
                    while(TRMT==0);
                }
                
            }
        }
        
        
    }
    //send_uart("\r\nhey");
    return;
}
